{"version":3,"sources":["firebase.js","axios.js","redux/contants/action-types.js","redux/actions/productActions.js","Row.js","Requests.js","Banner.js","Nav.js","screens/HomeScreen.js","redux/reducers/userSlice.js","screens/SignUpScreen.js","screens/LoginScreen.js","screens/ProfileScreen.js","screens/MoviesDetails.js","Search/SearchMovie.js","Search/FavouriteMoviesList.js","App.js","redux/reducers/productReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firebase","initializeApp","firestore","googleProvider","GoogleAuthProvider","signInWithGoogle","e","preventDefault","signInWithPopup","then","res","console","log","user","catch","error","message","instance","axios","create","baseURL","ActionTypes","setProducts","products","type","payload","Row","title","fetchUrl","isLargeRow","dispatch","useDispatch","useState","movies","setMovies","useEffect","a","get","request","data","results","undefined","fetchData","navigate","useNavigate","className","map","movie","onClick","id","handleClick","src","poster_path","backdrop_path","alt","name","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchgetupcoming","fetchgetnowplaying","fetchMystery","fetchSciFi","fetchWestern","fetchAnimation","fetchTV","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","orignal_name","overview","substr","Nav","show","handleShow","transitionNavBar","window","scrollY","addEventListener","removeEventListener","to","class","HomeScreen","target","href","userSlice","createSlice","initialState","reducers","login","state","action","logout","actions","selectUser","SignUpScreen","emailRef","useRef","passwordRef","ref","placeholder","signInWithEmailAndPassword","current","value","alert","createUserWithEmailAndPassword","authUser","LoginScreen","signIn","setSignIn","Aos","init","duration","easing","data-aos","ProfileScreen","useSelector","email","signOut","base_url","MoviesDetails","movieId","useParams","trailerUrl","setTrailerUrl","similar","setSimilar","response2","response","fetchProductDetails","tagline","budget","revenue","status","vote_average","release_date","genres","Object","keys","videoId","opts","height","width","playerVars","autoplay","round","movieTrailer","tmdbId","url","urlParams","URLSearchParams","URL","search","goToDetailsFromAnotherMovie","SearchMovie","searchValue","setSearchValue","fetch","json","responseJson","getMovieRequest","onChange","event","index","goToDetailsFromSearch","FavouriteMoviesList","App","onAuthStateChanged","userAuth","uid","exact","path","element","initialProducts","rootReducer","combineReducers","allProducts","product","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.8edf5bfd.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nconst firebaseConfig = {\r\n  apiKey: `${process.env.REACT_APP_FIREBASE_API_KEY}`,\r\n  authDomain: `${process.env.REACT_APP_FIREBASE_AUTHDOMAIN}`,\r\n  projectId: `${process.env.REACT_APP_FIREBASE_PROJECT_ID}`,\r\n  storageBucket: `${process.env.REACT_APP_FIREBASE_STORAGEBUCKET}`,\r\n  messagingSenderId: `${process.env.REACT_APP_FIREBASE_MEASURMENT_ID}`,\r\n  appId: `${process.env.REACT_APP_FIREBASE_API_ID}`,\r\n  measurementId: `${process.env.REACT_APP_FIREBASE_MEASSAGESENDING_ID}`\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n \r\nconst auth = firebase.auth();\r\n\r\n// google authantication \r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nconst signInWithGoogle =(e) =>{\r\n  e.preventDefault();\r\n  auth.signInWithPopup(googleProvider).then((res)=>{\r\n    console.log(res.user);\r\n  }).catch((error)=>{\r\n    console.log(error.message);\r\n  })\r\n}\r\n \r\nexport { auth, signInWithGoogle };\r\nexport default db;\r\n","import axios from \"axios\";\r\n\r\n// base url to make requests to the movie  database\r\n// https://axios-http.com/docs/instance\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\n\r\n// instance.get('/foo-bar');\r\n\r\n// // https://api.themoviedb.org/3/foo-bar\r\n\r\n\r\n\r\n// https://www.themoviedb.org/documentation/api\r\n\r\nexport default instance;\r\n","export const ActionTypes={\r\n    SET_PRODUCTS: \"SET_PRODUCTS\",\r\n    SELECTED_PRODUCT: \"SELECTED_PRODUCT\",\r\n    REMOVE_SELECTED_PRODUCT:\"REMOVE_SELECTED_PRODUCT\",\r\n    // ADD_TO_FAVORITES:\"ADD_TO_FAVORITES\",\r\n    // REMOVE_FROM_FAVORITES:\"REMOVE_FROM_FAVORITES\",\r\n};","import { ActionTypes } from \"../contants/action-types.js\"\r\n\r\n \r\n\r\n\r\nexport const setProducts =(products)=>{\r\n    return {\r\n        type: ActionTypes.SET_PRODUCTS,\r\n        payload:products,\r\n    }\r\n}\r\n\r\nexport const selectedProduct = (products) => {\r\n    return {\r\n        type: ActionTypes.SELECTED_PRODUCT,\r\n        payload: products,\r\n    }\r\n}\r\n\r\nexport const removeSelectedProduct = () => {\r\n    return {\r\n        type: ActionTypes.REMOVE_SELECTED_PRODUCT,\r\n         \r\n    }\r\n}\r\n\r\n\r\n// export function addToFavorites(movie) {\r\n//     return { type: ActionTypes.ADD_TO_FAVORITES, payload: movie };\r\n// }\r\n\r\n// export function removeFromFavorites(movie) {\r\n//     return {\r\n//         type:ActionTypes.REMOVE_FROM_FAVORITES,\r\n//         payload: movie.id,\r\n//     };\r\n// }\r\n ","import React, { useState,useEffect } from 'react';\r\n//  import { Link } from 'react-router-dom';\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\n// import Youtube from \"react-youtube\";\r\n// import movieTrailer from \"movie-trailer\";\r\n \r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport {setProducts}  from './redux/actions/productActions';\r\n \r\n \r\n \r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";     // it is the url where all the poster will find \r\n\r\n function Row({title,fetchUrl,isLargeRow}) {\r\n        const dispatch = useDispatch();\r\n        const [movies, setMovies] = useState([]); \r\n             //  this is the way you declare a variable  using react hooks  in usestate give it a initial value that is empty array []   for using useState we can add useState in import react \r\n     // a  snippt  of code which runs based on spacific condition and variable  after runing the useeffect   movie can be loaded on the app console \r\n      // const [trailerUrl , setTrailerUrl ] = useState(\"\");\r\n    useEffect(() => {                 //  in this comp we use axios   so import axios \r\n        async function fetchData(){\r\n          try {\r\n            const request = await axios.get(fetchUrl);\r\n            // we get this https://api.themoviedb.org/3/foo-bar/ trending / all / week ? api_key = ${API_KEY} & language=en-US\r\n            //  console.log(request.data.results);  \r\n            if(request.data.results!== null||request.data.results !== undefined){\r\n              setMovies(request.data.results);    // what data str we get\r\n              \r\n            }\r\n            dispatch(setProducts(request.data));\r\n            return request;\r\n          } catch (error) {\r\n             console.log(error);\r\n          }\r\n        }\r\n        fetchData();   \r\n    }, [dispatch,fetchUrl]);   //  if [] ,  this tell that run ones when the row loads   don't run again     hear fetcthurl is use in this fxn input parameter   becuase  would't render the use effect   it will be must   that combine with async     \r\n    //  console.table(movies);   // due to this all the rows of movie are seprate\r\n\r\n  \r\n\r\n    //    creating option of trailer \r\n    // const opts ={\r\n    //     height: \"390\",\r\n    //     width: \"100%\",\r\n    //     playerVars:{\r\n    //         // https://developers.google.com/youtue/player_parameters\r\n    //         autoplay:1,    \r\n    //     },\r\n    // };\r\n\r\n    // handle the trailer \r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const handleClick = (movie) =>{\r\n      navigate(`/movie/${movie.id}`);\r\n      //  if(trailerUrl){\r\n      //      setTrailerUrl(\"\");\r\n      //  }\r\n      //  else{\r\n      //      movieTrailer((movie?.title || movie?.name || movie?.original_name || \"\"), { id: true, multi: true })\r\n      //        .then((url) => {\r\n      //          // https://www.youtube.com/watch?v=XtMThy8QkqU\r\n      //          url = (`https://www.youtube.com/watch?v=${url}`);\r\n      //         //  console.log(url);\r\n\r\n      //          const urlParams = new URLSearchParams(new URL(url).search);\r\n      //          setTrailerUrl(urlParams.get(\"v\"));\r\n      //         //  console.log(urlParams);\r\n      //         //  console.log(trailerUrl);\r\n              \r\n      //        })\r\n      //        .catch((error) => console.log(error.message)); \r\n      //  }\r\n      \r\n    };\r\n     \r\n     \r\n      \r\n \r\n    return (\r\n      <div className=\"row\">\r\n        <h1>{title}</h1>\r\n\r\n        <div className=\"row_posters\">\r\n          {/* severl row poster (s) */}\r\n\r\n          {movies.map((movie) => (\r\n            <> \r\n              <img\r\n                key={movie.id}\r\n                onClick={() => handleClick(movie)}\r\n                className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                src={`${base_url}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n              />\r\n            </>\r\n          ))}\r\n        </div>\r\n        {/* {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />} */}\r\n      </div>\r\n    );\r\n}\r\n \r\n export default Row;\r\n \r\n"," \r\n\r\nexport const API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n \r\n\r\n\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks-213`,\r\n\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  fetchgetupcoming: `/discover/movie?api_key=${API_KEY}&language=en-US&page=45`,\r\n  fetchgetnowplaying: `/discover/movie?api_key=${API_KEY}&language=en-US&page=59`,\r\n  fetchMystery: `/discover/movie?api_key=${API_KEY}&with_genres=9648`,\r\n  fetchSciFi: `/discover/movie?api_key=${API_KEY}&with_genres=878`,\r\n  fetchWestern: `/discover/movie?api_key=${API_KEY}&with_genres=37`,\r\n  fetchAnimation: `/discover/movie?api_key=${API_KEY}&with_genres=16`,\r\n  fetchTV: `/discover/movie?api_key=${API_KEY}&with_genres=10770`,\r\n  \r\n};\r\n\r\nexport default requests;","import React,{useState,useEffect} from 'react';\r\n\r\nimport axios from './axios' ;    // remember postman kind thing\r\n\r\nimport requests from './Requests';\r\nimport \"./Banner.css\";\r\nfunction Banner() {\r\n    // first we need request   usestate is responsible for whatever  random movie gets selected at the top\r\n    const [movie, setMovie]= useState([]);\r\n    \r\n//    useEffect is a peace of code which runs based on a given condition so in this case we want this run once when the Banner component load\r\n// asynchronous function which makes a call to external api      \r\n// fetchData    fetching the data\r\n useEffect(() => {\r\n     async function fetchData(){\r\n      const request = await axios.get(requests.fetchActionMovies)\r\n        setMovie(\r\n          request.data.results[\r\n          Math.floor(Math.random()*request.data.results.length)\r\n          ]\r\n        );\r\n        return request;\r\n    }\r\n     fetchData();\r\n }, []);\r\n\r\n\r\n // stackoverflow\r\n// {/* truncate just  set  read more ............ */}\r\n  function truncate(str,n){\r\n      return str?.length>n?str.substr(0,n-1)+\"...\":str;\r\n  }\r\n    return (\r\n        <header className =\"banner\"\r\n        style = {{\r\n            backgroundSize:\"cover\",\r\n            backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n            )`,\r\n            backgroundPosition: \"center center\",\r\n         }}\r\n        >   { /*<<< backgroung image */}\r\n            <div className =\"banner_contents\">\r\n                    {/* title */}\r\n                <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.orignal_name }</h1>\r\n            \r\n            \r\n              <div className = \"banner_buttons\">\r\n                    {/* div > 2 buttons */}\r\n                <button className = \" banner_button\">Play</button>\r\n            \r\n                <button className = \" banner_button\">My List</button>\r\n              </div>\r\n            \r\n              {/* description */}\r\n              <p className= \"banner_description\">\r\n                  {/* {movie?.overview} */}\r\n                {/* truncate just  set  read more ............ */}\r\n                    {truncate(movie?.overview,150)}   \r\n               </p>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React,{useState,useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\nfunction Nav() {\r\n    const [show , handleShow] = useState(false);\r\n   \r\n\r\n\r\n    const transitionNavBar=()=>{\r\n             if(window.scrollY > 40){\r\n                  handleShow(true);\r\n             }\r\n             else handleShow(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n         window.addEventListener(\"scroll\",transitionNavBar);\r\n         return () =>{\r\n             window.removeEventListener(\"scroll\", transitionNavBar);\r\n         };\r\n    }, [])\r\n    return (\r\n      <div className={`nav ${show && \"nav_black\"}`}>\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"nav_logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/2560px-Netflix_2015_logo.svg.png\"\r\n            alt=\"Netflix Logo\"\r\n          />\r\n        </Link>\r\n        <Link to='/search'>\r\n          <button className='searchButton' type=\"submit\"><i class=\"fa fa-search\"></i></button>\r\n        </Link>\r\n        <Link to=\"/profile\">\r\n          <img\r\n            className=\"nav_avatar\"\r\n            src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\"\r\n            alt=\"Netflix Logo\"\r\n          />\r\n        </Link>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Nav\r\n","import React from \"react\";\r\n\r\n\r\nimport \"./HomeScreen.css\";\r\nimport Row from \"../Row\";\r\n\r\nimport requests from \"../Requests\";\r\nimport Banner from \"../Banner\";\r\nimport Nav from \"../Nav\";\r\n\r\nconst HomeScreen=()=>{\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          {/* navbar */}\r\n          <Nav />\r\n          {/* banner */}\r\n          <Banner />\r\n          <Row\r\n            id=\"1\"\r\n            title=\"ORIGINALS MOVIES\"\r\n            fetchUrl={requests.fetchNetflixOriginals}\r\n            isLargeRow={true}\r\n          />\r\n          <Row id=\"2\" title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n          <Row id=\"3\" title=\"Up-Coming\" fetchUrl={requests.fetchgetupcoming} />\r\n          <Row id=\"4\" title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n          <Row id=\"5\" title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n          <Row id=\"6\" title=\"Now Playing\" fetchUrl={requests.fetchgetnowplaying} />\r\n          <Row id=\"7\" title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n          <Row id=\"8\" title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n          <Row id=\"9\" title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n          <Row id=\"10\" title=\"Mystery\" fetchUrl={requests.fetchMystery} />\r\n          <Row id=\"11\" title=\"SciFi\" fetchUrl={requests.fetchWestern} />\r\n          <Row id=\"12\" title=\"Animation\" fetchUrl={requests.fetchAnimation} />\r\n          <Row id=\"13\" title=\"TV\" fetchUrl={requests.fetchTV} />\r\n          <Row id=\"14\" title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n\r\n          <footer>\r\n            <h1>Footer</h1>\r\n            <div className=\"footer-about-dev\">\r\n              <p>Devloper : Ajay Jangra</p>\r\n              <p>Devlope only for project perspective </p>\r\n              <p>\r\n                <a\r\n                  target=\"blank\"\r\n                  href=\"https://www.linkedin.com/in/ajay-jangra-376ba1202/\"\r\n                >\r\n                  Linked In\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\nexport default  HomeScreen;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: null,\r\n    },\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n        logout: (state) => {\r\n            state.user = null;\r\n        },\r\n    },\r\n});\r\nexport const { login, logout } = userSlice.actions;\r\n// The function below is called a selector and allows us to select a value from\r\n\r\n// the state. Selectors can also be defined inline where they're used instead of \r\n// in the slice file. For example: useSelector((state) state.counter.value)\r\nexport const selectUser = ((state) => state.user.user);\r\n// console.log(` me selectUser hu ${selectUser}`);\r\n\r\nexport default userSlice.reducer;","import React,{useRef} from 'react'\r\nimport { auth, signInWithGoogle} from \"../firebase\";\r\nimport './SignUpScreen.css';\r\n \r\nfunction SignUpScreen() {\r\n\r\n    const emailRef = useRef(null);\r\n    const passwordRef = useRef(null);\r\n     \r\n     const register = (e)=>{\r\n       e.preventDefault();\r\n\r\n       auth.createUserWithEmailAndPassword(\r\n         emailRef.current.value,\r\n         passwordRef.current.value\r\n       ).then((authUser)=>{  \r\n          console.log(authUser);\r\n       }).catch((error)=>{\r\n         alert(error.message);\r\n       });\r\n     }\r\n  \r\n      const  signIn = (e)=>{\r\n         e.preventDefault();\r\n         auth.signInWithEmailAndPassword(\r\n           emailRef.current.value,\r\n           passwordRef.current.value\r\n         ).catch((error)=>{\r\n         alert(error.message);\r\n       });\r\n      }\r\n\r\n  return (\r\n    <div className=\"signUpScreen\">\r\n      <form>\r\n        <h1>Sign In</h1>\r\n        <input ref={emailRef} placeholder=\"Email\" type=\"email\" />\r\n        <input ref={passwordRef} placeholder=\"Password\" type=\"password\" />\r\n        <button type=\"submit\" className='signInButton' onClick={signIn}>\r\n          Log In\r\n        </button>\r\n        <button type=\"submit\" className=\"signInWithGoogle\"\r\n        onClick={signInWithGoogle}>\r\n          Sign In with Google\r\n        </button>\r\n        <h4>\r\n          <span className=\"signUpScreen-gray\"> New to Netflix? </span>\r\n          <span className=\"signUpScreen_link\" onClick={register}>\r\n            Sign up now.\r\n          </span>\r\n        </h4>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpScreen","import React, { useState, useEffect } from \"react\";\r\nimport SignUpScreen from \"./SignUpScreen.js\";\r\nimport \"./LoginScreen.css\";\r\n\r\nimport Aos from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nfunction LoginScreen() {\r\n  const [signIn, setSignIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Aos.init({ duration: 2000, easing: \"ease-in-sine\" });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"loginScreen\">\r\n      <div className=\"loginScreen_background\">\r\n        <img\r\n          className=\"loginScreen_logo\"\r\n          // src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/2560px-Netflix_2015_logo.svg.png\"\r\n          src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n          alt=\"logo-img\"\r\n        />\r\n\r\n        <button className=\"loginScreen_button\" onClick={() => setSignIn(true)}>\r\n          Login\r\n        </button>\r\n        <div className=\"loginScreen_gradient\" />\r\n      </div>\r\n      <div className=\"loginScreen_body\">\r\n        {signIn ? (\r\n          <SignUpScreen />\r\n        ) : (\r\n          <>\r\n            <h1 data-aos=\"fade-down\">\r\n              Ulitimated films,Tv programmes and more.\r\n            </h1>\r\n            <h2 data-aos=\"fade-left\">Watch anywhere. Cancel anytime.</h2>\r\n            <div data-aos=\"zoom-out-up\" className=\"loginScreen_input\">\r\n              <form>\r\n                <input type=\"email\" placeholder=\"Email address\" />\r\n                <button\r\n                  onClick={() => setSignIn(true)}\r\n                  className=\"loginScreen_getStarted\"\r\n                >\r\n                  GET STARTED\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <h3 data-aos=\"fade-right\">\r\n              Ready to watch? Enter your email to create or restart your\r\n              membership.\r\n            </h3>\r\n          </>\r\n        )}\r\n      </div>\r\n      {/*  down part  */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React from 'react'\r\nimport \"./ProfileScreen.css\";\r\nimport Nav from '../Nav';\r\n\r\nimport { useSelector } from 'react-redux';\r\n// import { selectUser } from \"../features/userSlice.js\";\r\n\r\nimport {auth} from \"../firebase\" ;\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { selectUser } from '../redux/reducers/userSlice';\r\n// import { selectUser } from \"../features/userSlice.js\";\r\n\r\n\r\nfunction ProfileScreen() {\r\n  const user = useSelector(selectUser);\r\n    const navigate = useNavigate();\r\n    const home = () => {\r\n      navigate(\"/\");\r\n    };\r\n  return (\r\n    <div className=\"profileScreen\">\r\n      <Nav />\r\n      <div className=\"profileScreen-body\">\r\n        <h1>Edit Profile</h1>\r\n        <div className=\"profileScreen-info\">\r\n          <img\r\n            src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\"             \r\n            alt=\"info\"\r\n          />\r\n          <div className=\"profileScreen-details\">\r\n            <h2>{user.email}</h2>\r\n            <div className=\"profileScreen-planes\">\r\n              <h3>Plans</h3>\r\n              <p></p>\r\n              <div className='back_signout_button'>\r\n                <button\r\n                  onClick={() => auth.signOut()}\r\n                  className=\"profileScreen-signOut\"\r\n                >\r\n                  Sign Out\r\n                </button>\r\n                <button className=\"profileScreen-signOut\" onClick={home}>\r\n                  Back to Home\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen","import React, { useEffect, useState } from 'react';\r\nimport Nav from '../Nav';\r\n// import './MoviesDetails.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n// import { useSelector } from 'react-redux';\r\nimport { selectedProduct, removeSelectedProduct } from '../redux/actions/productActions';\r\nimport { API_KEY } from '../Requests';\r\n\r\n\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\n\r\n\r\n\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport \"./MoviesDetails.css\";\r\n\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original//\";     // it is the url where all the poster will find \r\n\r\nconst MoviesDetails = () => {\r\n\r\n  const { movieId } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  // const [movie, setMovie] = useState({ movieDetail: 'null' , similarMovie: 'null' });\r\n  const [movie, setMovie] = useState([]);\r\n  const [similar, setSimilar] = useState();\r\n\r\n\r\n\r\n  // get the selected movie  and similar movie in  Movie and Similar state \r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchProductDetails = async () => {\r\n      try {\r\n        const response2 = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${API_KEY}&language=en-US&page=1`).catch((error) => {\r\n          console.log(error);\r\n        });\r\n        //  console.log(response2.data.results);\r\n        setSimilar(response2.data.results);\r\n\r\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en`).catch((error) => {\r\n          console.log(error);\r\n        });\r\n        setMovie(response.data);\r\n        dispatch(selectedProduct(response.data));\r\n\r\n      } catch (err) {\r\n        console.log(\"go back\");\r\n      }\r\n\r\n\r\n    };\r\n\r\n    if (movieId && movieId !== \"\") {\r\n      fetchProductDetails();\r\n    }\r\n    return () => {\r\n      dispatch(removeSelectedProduct());\r\n    }\r\n\r\n  }, [dispatch, movieId]);\r\n\r\n\r\n\r\n\r\n  const { poster_path, tagline, budget, revenue, overview, status, title, vote_average, release_date, genres } = movie;\r\n  // console.log(movie);\r\n  // navigator to home page \r\n  const navigate = useNavigate();\r\n  const home = () => {\r\n    navigate(\"/\");\r\n  };\r\n  const goToDetailsFromAnotherMovie = (value) => {\r\n    navigate(`/movie/${value.id}`);\r\n  }\r\n  //  trailer \r\n  const opts = {\r\n    height: \"420\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtue/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleTrailer = () => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    }\r\n    else {\r\n      movieTrailer(null, { tmdbId: movie.id })\r\n        .then((url) => {\r\n          // console.log(\"url is \" + url);\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          // console.log(\"urlParamsn\" + urlParams);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      {Object.keys(movie).length === 0 ? (<div className='Loader'><ScaleLoader /></div>) : (\r\n        <div className='movieDetailsPage'>\r\n          <div className=\"main-div\">\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n            <div className='aboutMovieMainDiv'>\r\n\r\n              <div className='selectedMoviePoster'>\r\n                <img\r\n                  className=\"selectedPoster\"\r\n                  src={`${base_url}${poster_path}`}\r\n                  alt={title}\r\n\r\n                />\r\n              </div>\r\n              <div className='selectedMovieDetails'>\r\n                <div className='selectedMovieTitle'>\r\n                  <h1>{title}</h1>\r\n                  <p>&nbsp; &nbsp;\r\n                    {genres.map((value) => {\r\n                      return (\r\n                        <>{value.name},</>\r\n                      )\r\n                    })}\r\n                    &nbsp; &nbsp; &nbsp; &nbsp; Release Data:- {release_date}</p>\r\n                </div>\r\n                <div className='selectedMovieTrailer'>\r\n                  <div className='selectedMovieReating'><p>{vote_average} ⭐</p></div>\r\n                  <div className='selectedMovieBudget'><p>{Math.round(budget / 10000000)} M </p></div>\r\n                  <div className='selectedMovieRevenue'><p>{Math.round(revenue / 10000000)} M</p></div>\r\n                  <button className='playTrailer' onClick={() => handleTrailer()}>\r\n                    {trailerUrl ? (<>Stop Trailer</>) : (<>Play Trailer</>)}\r\n                  </button>\r\n                  <button className=\"backToHome\" onClick={home}>\r\n                    Back to Home\r\n                  </button>\r\n                </div>\r\n                <div className='sectectMovieDiscription' >\r\n                  <p className='tagline' >{tagline}</p>\r\n                  <h3>Overview</h3>\r\n                  <p className='selectedMovieOverView'>{overview}</p>\r\n                  <p>STATUS:- {status}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n            {/* Similar movies  */}\r\n            <h1 className='similarMovieHeading'>Similar Movies </h1>\r\n            <div className='similarMovieMainDiv'>\r\n              {\r\n                similar.map((value) => {\r\n                  return (\r\n                    <>\r\n                      <div className='similarMovieResult' >\r\n                        <img src={`${base_url}${value.poster_path}`} alt='movie' className='similarMovieImage' onClick={() => goToDetailsFromAnotherMovie(value)}></img>\r\n                        <h4>{value.title}</h4>\r\n                        {/* <button className='similarAddInFav'><i className='fa fa-plus'></i></button> */}\r\n                      </div>\r\n                    </>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesDetails","import React, { useState, useEffect } from 'react'\r\nimport { API_KEY } from '../Requests';\r\nimport Nav from '../Nav';\r\nimport \"./searchMovie.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { useDispatch } from 'react-redux';\r\n// import { addToFavorites } from '../redux/actions/productActions.js';\r\n\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\n\r\nconst SearchMovie = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"tom\");\r\n  // const [favourites, setFavourites] = useState([]);\r\n  const base_url = \"https://image.tmdb.org/t/p/original//\";\r\n  // const dispatch= useDispatch();\r\n\r\n   \r\n  // add in Fav\r\n  // const addFavouriteMovie = (movie) => {\r\n  //   // const newFavouriteList = [...favourites, movie];\r\n  //   dispatch(addToFavorites(movie));\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const getMovieRequest = async (searchValue) => {\r\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchValue}&page=1&include_adult=false`;\r\n\r\n      const response = await fetch(url);\r\n      const responseJson = await response.json();\r\n      // console.log(responseJson.results[0].poster_path);\r\n      setMovies(responseJson.results);\r\n\r\n    };\r\n    getMovieRequest(searchValue);\r\n  }, [searchValue]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const goToDetailsFromSearch=(movie)=>{\r\n    navigate(`/movie/${movie.id}`);\r\n  }\r\n\r\n  // console.log(searchValue);\r\n  // console.log(movies);\r\n  return (\r\n    <>\r\n     <Nav />  \r\n      {Object.keys(movies).length === 0 ? (<div className='Loader'><ScaleLoader /></div>) : (\r\n      <div className='searchMainPage' >\r\n        <div className='searchBar'>\r\n          <input\r\n            className='searchInput'\r\n            onChange={(event) => setSearchValue(event.target.value)}\r\n            placeholder='Type to search...'\r\n          >\r\n          </input>\r\n        </div>\r\n\r\n\r\n        <div className='searchMovieMainDiv'>\r\n          {movies ? (movies.map((movie, index) => (\r\n            <div className='searchMovieResult'>\r\n              <img src={`${base_url}${movie.poster_path}`} alt='movie' className='searchMovieImage' onClick={()=>goToDetailsFromSearch(movie)}></img>\r\n              <h4>{movie.title}</h4>\r\n              {/* <button className='searchAddInFav' ><i className='fa fa-plus'></i></button> */}\r\n            </div>\r\n          ))\r\n          ) : (<>\r\n                <div className=\"loader\"></div>\r\n          </>)\r\n          }\r\n        </div>\r\n\r\n        {/* pagination */}\r\n\r\n        {/* <div class=\"pagination\">\r\n        <button  onClick={()}>&laquo;</button>\r\n        <button  onClick={()}>1</button>\r\n        <button  onClick={()}>2</button>\r\n        <button  onClick={()}>3</button>\r\n        <button  onClick={()}>4</button>\r\n        <button  onClick={()}>5</button>\r\n        <button  onClick={()}>&raquo;</button>\r\n      </div> */}\r\n      </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchMovie"," \r\n\r\nimport React from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n \r\n\r\nexport default function FavouriteMoviesList() {\r\n    // const favorites = useSelector((state) => state.allProducts.products);\r\n//  console.log(favorites);\r\n    \r\n    // const navigate = useNavigate();\r\n    // const goToDetailsFromSearch = (movie) => {\r\n    //     navigate(`/movie/${movie.id}`);\r\n    // }\r\n    // const base_url = \"https://image.tmdb.org/t/p/original//\";\r\n\r\n    return (\r\n       \r\n         <div className='searchMovieMainDiv'>\r\n          {/* {favorites ? (favorites.map((movie, index) => (\r\n            <div className='searchMovieResult'>\r\n              <img src={`${base_url}${movie.poster_path}`} alt='movie' className='searchMovieImage' onClick={()=>goToDetailsFromSearch(movie)}></img>\r\n              <h4>{movie.title}</h4>\r\n            </div>\r\n          ))\r\n          ) : (<>\r\n            <center>....Loading</center>\r\n          </>)\r\n          } */}\r\n        </div>\r\n    );\r\n}","import React,{useEffect} from 'react';\nimport { Routes,Route } from \"react-router-dom\";\nimport { auth } from './firebase.js';\nimport HomeScreen from \"./screens/HomeScreen.js\";\nimport {useDispatch,useSelector} from 'react-redux';\nimport { login, logout, selectUser } from \"./redux/reducers/userSlice.js\";\n// import { login, logout , selectUser } from \"./features/userSlice.js\";\n\n\nimport LoginScreen from './screens/LoginScreen.js';\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport MoviesDetails from './screens/MoviesDetails';\nimport SearchMovie from \"./Search/SearchMovie.js\";\nimport FavouriteMoviesList from './Search/FavouriteMoviesList.js';\n \nconst  App =()=> {\n  \n  // const user = useSelector(selectUser);\n  const user = useSelector(selectUser);\n  // console.log(user);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n  const unsubscribe = auth.onAuthStateChanged(userAuth=>{\n    if(userAuth){\n      //Logged in\n  \n      dispatch(login({\n        uid:userAuth.uid,\n        email:userAuth.email,\n      }));\n    }\n    else{\n      // Logged out\n      dispatch(logout());\n    }\n  });\n\n   return unsubscribe;\n\n  }, [dispatch])\n  \n\n\n\n   \n  return (\n    <div>\n      {!user ? (\n        <LoginScreen />\n      ) : (\n        <Routes>\n          <Route exact path=\"/\" element={<HomeScreen />} />\n          <Route path=\"/profile\" element={<ProfileScreen />} />\n          <Route path=\"/movie/:movieId\" element={<MoviesDetails />} />\n            <Route path=\"/search\" element={<SearchMovie />} />\n            <Route path=\"/fav\" element={<FavouriteMoviesList/>} />\n          <Route path=\"*\" element={<HomeScreen />} />\n        </Routes>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ActionTypes } from \"../contants/action-types\";\r\nconst initialProducts = {\r\n    products:[],\r\n };\r\n \r\n \r\n\r\n// const initialFav = {\r\n//     fav:[{}],\r\n// };\r\n\r\n// export const favoritesReducer = (state = initialFav, action) => {\r\n//     switch (action.type) {\r\n//         case ActionTypes.ADD_TO_FAVORITES:{\r\n//             const fav=[];\r\n//             fav.puah({rate:action.payload});\r\n//             return {\r\n//                 ...state, fav,\r\n//             }\r\n//         };\r\n//         case ActionTypes.REMOVE_FROM_FAVORITES:\r\n//             return {\r\n                \r\n//             };\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n \r\n\r\n // action = {type,payload };\r\nexport const productReducer = (state = initialProducts, {type,payload})=>{\r\n    // console.log(initialState);\r\n    switch (type) {\r\n        case ActionTypes.SET_PRODUCTS:\r\n            return {...state ,products:payload} ;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n }\r\n\r\nexport const selectedProductReducer = (state = {}, { type, payload }) => {\r\n    // console.log(initialState);\r\n    switch (type) {\r\n        case ActionTypes.SELECTED_PRODUCT:\r\n            return { ...state, ...payload };\r\n        case ActionTypes.REMOVE_SELECTED_PRODUCT:\r\n            return  {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n \r\n \r\n \r\n","import { combineReducers } from \"redux\";\r\nimport {productReducer,selectedProductReducer}  from \"./productReducer.js\";\r\n// import userReducer from \"./userSlice.js\";\r\n \r\n\r\nconst rootReducer =  combineReducers({\r\n    allProducts: productReducer,\r\n    product: selectedProductReducer,\r\n    // user: userReducer,\r\n});\r\n\r\nexport default  rootReducer;\r\n","// import { configureStore } from '@reduxjs/toolkit'\r\n\r\n// import rootReducer from './reducers/index.js'\r\n\r\n//  const store = configureStore({ reducer: rootReducer })\r\n// // The store now has redux-thunk added and the Redux DevTools Extension is turned on\r\n\r\n\r\n// export default store;\r\n\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./reducers/userSlice.js\";\r\nimport rootReducer from './reducers/index.js'\r\n\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        user: userReducer,\r\n        reducer:rootReducer,\r\n    },\r\n});\r\n\r\n\r\n\r\n\r\n// https://redux-toolkit.js.org/tutorials/quick-start\r\n\r\n// Create a Redux store with configureStore\r\n// configureStore accepts a reducer function as a named argument\r\n// configureStore automatically sets up the store with good default settings\r\n// Provide the Redux store to the React application components\r\n// Put a React-Redux <Provider> component around your <App />\r\n// Pass the Redux store as <Provider store={store}>\r\n// Create a Redux \"slice\" reducer with createSlice\r\n// Call createSlice with a string name, an initial state, and named reducer functions\r\n// Reducer functions may \"mutate\" the state using Immer\r\n// Export the generated slice reducer and action creators\r\n// Use the React-Redux useSelector/useDispatch hooks in React components\r\n// Read data from the store with the useSelector hook\r\n// Get the dispatch function with the useDispatch hook, and dispatch actions as needed","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n \nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n// import store from \"./app/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}